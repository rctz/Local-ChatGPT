name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt
        
    - name: Analyzing the code with pylint
      run: |
        pylint $(git ls-files '*.py') > pylint-output.txt || echo "Pylint failed with error code $?"
      continue-on-error: true
      
    - name: Save Pylint output as artifact
      uses: actions/upload-artifact@v2
      with:
        name: pylint-output  # Artifact name
        path: pylint-output.txt  # Path to the file you want to upload
        
    - name: Post comment in PR with Pylint score
      if: success()
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { context, GitHub } = require('@actions/github');
          const github = new GitHub(process.env.GITHUB_TOKEN);

          const comment = `Pylint score for this PR: ${process.env.pylint_score}
          "Artifact: [Download pylint-output.txt](https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID})"`;
          github.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: comment
          });


